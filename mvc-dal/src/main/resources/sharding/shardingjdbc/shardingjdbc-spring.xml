<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rdb="http://www.dangdang.com/schema/ddframe/rdb"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.dangdang.com/schema/ddframe/rdb http://www.dangdang.com/schema/ddframe/rdb/rdb.xsd">

    <!-- 自动扫描,applicationContext.xml中存在了 -->
    <context:component-scan base-package="com.liupeng"/>

    <!--mapperFactoryBean的配置版本-->
    <bean id="shardingMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.liupeng.sharding.shardingjdbc.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="shardingSqlSessionFactory"/>
    </bean>

    <!--特定的sqlSessionFactoryBean-->
    <bean id="shardingSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="shardingDataSource"/>
        <property name="mapperLocations" value="classpath:sharding/shardingjdbc/mapper/*Mapper.xml"/>
    </bean>


    <!--分库策略:按照user_id分库 eg.algorithm-expression="ds_${user_id % 2}"-->
    <!--如果分成2库6表，则每个库里有三个表，则配置成：algorithm-expression="dbtbl_${(id.longValue() / 3).longValue() % 2}"-->
    <rdb:strategy id="userDatabaseStrategy" sharding-columns="user_id"
                  algorithm-class="com.liupeng.sharding.shardingjdbc.algorithm.TeacherSingleKeyDatabaseShardingAlgorithm"/>
    <rdb:strategy id="studentDatabaseStrategy" sharding-columns="student_id"
                  algorithm-class="com.liupeng.sharding.shardingjdbc.algorithm.TeacherSingleKeyDatabaseShardingAlgorithm"/>
    <!--分表策略：按照user_id分表 eg.algorithm-expression="t_order_${order_id % 2}"-->
    <rdb:strategy id="userTableStrategy" sharding-columns="user_id"
                  algorithm-class="com.liupeng.sharding.shardingjdbc.algorithm.TeacherSingleKeyTableShardingAlgorithm"/>
    <rdb:strategy id="studentTableStrategy" sharding-columns="student_id"
                  algorithm-class="com.liupeng.sharding.shardingjdbc.algorithm.StudentSingleKeyTableShardingAlgorithm"/>

    <!--数据源-->
    <rdb:data-source id="shardingDataSource">
        <rdb:sharding-rule data-sources="sharding_0,sharding_1" default-data-source="sharding_0">
            <rdb:table-rules>
                <!--t_user_0${0..2}-->
                <rdb:table-rule logic-table="t_user" actual-tables="t_user_00,t_user_01,t_user_02"
                                database-strategy="userDatabaseStrategy" table-strategy="userTableStrategy"/>
                <!--t_student_0${0..1}-->
                <rdb:table-rule logic-table="t_student" actual-tables="t_student_00,t_student_01"
                                database-strategy="studentDatabaseStrategy" table-strategy="studentTableStrategy"/>
            </rdb:table-rules>
            <!--<rdb:binding-table-rules>
                <rdb:binding-table-rule logic-tables="t_user,t_student"/>
            </rdb:binding-table-rules>-->
            <rdb:default-database-strategy sharding-columns="none"
                                           algorithm-class="com.dangdang.ddframe.rdb.sharding.api.strategy.database.NoneDatabaseShardingAlgorithm"/>
        </rdb:sharding-rule>
        <rdb:props>
            <prop key="metrics.enable">true</prop>
        </rdb:props>
    </rdb:data-source>


    <!-- 特定的事务管理器 -->
    <bean id="shardingTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="shardingDataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="shardingTransactionManager"/>

</beans>