<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <aop:aspectj-autoproxy/>

    <!-- *************************** -->
    <!--扫描-->
    <!-- *************************** -->
    <context:component-scan base-package="com.liupeng" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <!-- *************************** -->
    <!-- 默认的注解映射的支持 -->
    <!-- *************************** -->
    <bean id="jsonMessageConverter" class="com.liupeng.annotationdriven.response.Base64JsonHttpMessageConverter"></bean>
    <bean id="myConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.liupeng.annotationdriven.convert.StringToDateConverter"></bean>
            </list>
        </property>
    </bean>
    <mvc:annotation-driven conversion-service="myConversionService">
        <!--入参转换-->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"></bean>
            <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"></bean>
            <bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"></bean>
        </mvc:message-converters>
        <!--入参处理-->
        <mvc:argument-resolvers>
            <bean class="com.liupeng.annotationdriven.argument.JsonMapperArgumentResolver"></bean>
        </mvc:argument-resolvers>
        <!--结果处理-->
        <mvc:return-value-handlers>
            <bean class="com.liupeng.annotationdriven.response.ResponseJsonMethodProcessor">
                <property name="messageConverter" ref="jsonMessageConverter"></property>
                <property name="beanWrappers">
                    <list>
                        <bean class="com.liupeng.annotationdriven.response.wrapper.DefaultBeanWrapper"></bean>
                        <bean class="com.liupeng.annotationdriven.response.wrapper.ListWrapper"></bean>
                    </list>
                </property>
            </bean>
        </mvc:return-value-handlers>
    </mvc:annotation-driven>


    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>


    <!-- *************************** -->
    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
    <!-- *************************** -->
    <mvc:default-servlet-handler/>


    <!-- 静态资源放行 -->
    <mvc:resources location="/resources/" mapping="/resources/**/*"/>

    <!-- 定义无需Controller的url<->view直接映射 -->
    <mvc:view-controller path="/" view-name="redirect:/frame"/>

    <!-- *************************** -->
    <!--视图解析器-->
    <!-- *************************** -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- 拦截器 -->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.liupeng.interceptor.AuthorizedInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>-->

</beans>